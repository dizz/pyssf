.. 
   Copyright (C) 2010 Platform Computing
   
   This library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Lesser General Public
   License as published by the Free Software Foundation; either
   version 2.1 of the License, or (at your option) any later version.
   
   This library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.
   
   You should have received a copy of the GNU Lesser General Public
   License along with this library; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
   

The pyrest package
==================

This package implements a generic RESTful interface. It can be used for
all kinds of operations. For now it supports Job submission.

It consist of the following modules:
 * **service** - This is the basic implementation of the RESTful service.
 * **resource_model** - The resource model.
 * **backends** - Backends are used to trigger actually operations.
 * **rendering_parsers** - Parsers which traverse between the data on the wire
   and the resource model.

.. note::
    When using the pyrest module for other stuff then job submission you need
    to create a new **resource** kind and update the rendering parsers. 

.. note::
    Currently pyrest does not handle the scheme given to links and categories.

The pyrest package follows the principals described in [OCCI]_.

Service
-------

Uses [web.py]_ to implement a RESTful service.

Non Persistent Resource Dictionary
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Dictionary which holds resources from the resource model. But when using get
and set it will return the proper HTTP Data needed by the service. This part is
not persistent on failure or restart of the service all resource will be lost.

Persistent Resource Dictionary
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Is not yet implemented.

HTTP Handler
^^^^^^^^^^^^
Handler the basic HTTP CRUD operations. It implements the logic when a resource
is created, updated or destroyed.

Resource Handler
^^^^^^^^^^^^^^^^
Is derived form the HTTP Handler and has some convenient routines to update the
resources in the Resource Dictionary.

Rendering Parsers
-----------------

The HTTP Header Parser
^^^^^^^^^^^^^^^^^^^^^^
Is derived from Parser. Does in general nothing more then parsing the HTTP
header and look for attributes, links and categories

.. note::
    If something is going to fail is is most probably in this class. It is not
    XML and parsing strings from the header and fill them into data structures
    can lead to issues. Still this part is reasonably tested.

Backends
--------
The backends actually trigger operations and map the HTTP/RESTful resource to
something else.

Job Handler
^^^^^^^^^^^
This Handler is capable of submitting jobs. Creation of the resources should be
done with the following category:

    ========  ============================
      Term      Scheme                    
    ========  ============================
    job       "http://purl.org/occi/kind#"
    ========  ============================

Currently the following attributes are supported:

    ========================  ======================  ===========
      Attribute               Description             Example    
    ========================  ======================  ===========
    occi.drmaa.remoteCommand  Path to Job Executable  /bin/sleep 
    occi.drmaa.args           Arguments               "100"      
    ========================  ======================  ===========

Also the following links/actions can be used to manipulate the job:

    ===================  ===============================
      Link                 Description                  
    ===================  ===============================
    <id>;release         Release a job currently on hold
    <id>;terminate       Terminate a running job        
    ===================  ===============================

.. [OCCI] OCCI website - http://www.occi-wg.org
.. [web.py] web.py website - http://webpy.org